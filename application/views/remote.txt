Удаленный постинг для MaxSite CMS
=================================

1. Работа только через POST.

2. Пример формы (action = http://сайт/remote):

<form action="http://localhost/codeigniter/remote" method="post">
	<p><strong>Логин:</strong> <input name="remote_login" type="text" value=""></p>
	<p><strong>Пароль:</strong> <input name="remote_password" type="password" value=""></p>
	<p><strong>Ключ:</strong> <input name="remote_key" type="text" value="0"></p>
	
	<p><strong>Функция:</strong> <input name="remote_function" type="text" value="test"></p>
	<p><strong>Аргумент 1:</strong> <input name="remote_function_args[1]" type="text" value=""></p>
	<p><strong>Аргумент 2:</strong> <input name="remote_function_args[2]" type="text" value=""></p>
	
	<p><input type="submit" value="Отправить" /></p>
</form>

3. Обязательные поля:

	remote_login - логин
	remote_password - пароль
	remote_key - ключ безопасности (пока не работает)
	remote_function - название функции удаленного постинга

4. Если функция содержит аргументы, то следует указывать поле remote_function_args. Если функция не использует аргументов, то отправляется пустое remote_function_args;

5. remote_function_args следует оформлять как массив:
	remote_function_args[1] - первый аргумент
	remote_function_args[2] - второй аргумент

Нумерация с 1.

6. Ответ от сайта приходит обычным echo. Если возникла ошибка, то возвращается описание ошибки. Все ошибки начинаются с «ERROR: ».

7. Планируемые функции

	+ Hello : возвращает Hello!
	+ addTwoNumbers : сложение двух чисел
		
	- getGeneralInfo : общая информация о сайте
		
	- getUsersBlogs : список всех авторов блога
	- getUserInfo : информация о авторе
		
	- newPost : новый пост
	- editPost : редактировать пост
	- getPost : получить пост
	- getRecentPostTitles : получить список всех постов (без текстов)
		
	- getCategoryList : рубрики
	- newCategory : новая рубрика
	
	- getTags : все метки
		
	??? getFileNameUploads : список уже загруженных файлов
	??? newMediaObject : загрузить файл


ПРИМЕЧАНИЯ
==========

Описание работы желаемого блог-клиента.

В начале работы, пользователь должен ввести свой логин, пароль и ключ безопасности. После этого он нажимает кнопку «Получить данные с сайта».

В ответ блог-клиент получает информацию о сайте, юзере, список рубрик, списо меток, список из заголовков всех записей (только этого юзера и по прочим разрешениям).

Если пользователь желает создать новую запись, то он нажимает кнопку «Новая запись», где ему открывается форма со всеми полями текстового редактора. По окончании нужно нажать кнопку «Отправить» и данные отправляются на сайт. В ответ получаются id, url, дата и статус созданной записи. Данные формы не очищатся, а только заменяются измененные данные (дата, slug и статус). При этом режим работы меняется с «создания новой» на «редактирование существующей» записи. Полсе редактрования, опять наживается кнопка «Отправить» и в ответ поулчаются теже данные (id, url, дата и статус). 

Если пользователь желает отредактировать запись, то он должден вначале её загрузить. Для этого ему нужно выбрать в списке запись для редактирования и нажать кнопку «Получить для редактирования». Данные загружаются в форму для редактирования.

Желательно написание первоначального блог-клиента в виде HTML+jQuery. В будущем можно сделать блог-клиент как обычную компьютерную программу (использовать rtf-форматирование).
